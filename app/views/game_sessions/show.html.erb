<h1><%= @game_session.name %></h1>

<script>
  let gameChannel = null;
  
  function initializeActionCable() {
    if (window.App && window.App.cable) {
      const gameSessionId = <%= @game_session.id %>;
      
      gameChannel = window.App.cable.subscriptions.create(
        { 
          channel: "GameChannel", 
          game_session_id: gameSessionId 
        },
        {
          connected: function() {
            console.log(`Connected to GameChannel for session ${gameSessionId}`);
          },

          disconnected: function() {
            console.log('Disconnected from GameChannel');
          },

          received: function(data) {
            console.log('Received game update:', data);
            handleGameUpdate(data);
          }
        }
      );
    } else {
      console.error('Action Cable not available, retrying in 1 second...');
      setTimeout(initializeActionCable, 1000);
    }
  }
  
  document.addEventListener('DOMContentLoaded', function() {
    // ActionCableの初期化を少し遅らせる
    setTimeout(initializeActionCable, 500);
  });
  
  function handleGameUpdate(data) {
    console.log('Handling update:', data.type);
    
    // 通知を表示
    if (data.message) {
      showNotification(data.message);
    }
    
    // タイプに応じて処理
    switch(data.type) {
      case 'player_action':
        if (data.current_player_name) {
          updateCurrentTurn(data.current_player_name, data.current_player_id);
        }
        // ページをリロード（簡易版）
        setTimeout(() => {
          location.reload();
        }, 2000);
        break;
        
      case 'game_status':
        if (data.status === 'finished' && data.winner) {
          showWinnerModal(data.winner);
        } else if (data.status === 'playing') {
          setTimeout(() => {
            location.reload();
          }, 1000);
        }
        break;
        
      case 'player_joined':
      case 'player_left':
        setTimeout(() => {
          location.reload();
        }, 1000);
        break;
    }
  }
  
  function updateCurrentTurn(playerName, playerId) {
    const currentUserId = document.body.dataset.currentUserId;
    const turnMessage = document.querySelector('.current-turn-message');
    
    if (turnMessage) {
      if (playerId == currentUserId) {
        turnMessage.innerHTML = '<div class="alert alert-success">あなたのターンです！</div>';
      } else {
        turnMessage.innerHTML = `<div class="alert alert-info">${playerName}さんのターンです。お待ちください。</div>`;
      }
    }
  }
  
  function showNotification(message) {
    // 既存の通知を削除
    const existingNotifications = document.querySelectorAll('.game-notification');
    existingNotifications.forEach(n => n.remove());
    
    // 新しい通知を作成
    const notification = document.createElement('div');
    notification.className = 'alert alert-info alert-dismissible fade show position-fixed game-notification';
    notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; max-width: 400px;';
    notification.innerHTML = `
      <i class="fas fa-info-circle me-2"></i>${message}
      <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
    `;
    
    document.body.appendChild(notification);
    
    // 5秒後に自動削除
    setTimeout(() => {
      if (notification.parentNode) {
        notification.remove();
      }
    }, 5000);
  }
  
  function showWinnerModal(winner) {
    const modalHtml = `
      <div class="modal fade" id="winnerModal" tabindex="-1">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header bg-success text-white">
              <h5 class="modal-title">🎉 ゲーム終了</h5>
            </div>
            <div class="modal-body text-center">
              <h3 class="text-success">${winner}さんの勝利です！</h3>
              <p>おめでとうございます！</p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" onclick="location.reload()">OK</button>
            </div>
          </div>
        </div>
      </div>
    `;
    
    // 既存のモーダルを削除
    const existingModal = document.getElementById('winnerModal');
    if (existingModal) {
      existingModal.remove();
    }
    
    // 新しいモーダルを追加
    document.body.insertAdjacentHTML('beforeend', modalHtml);
    
    // モーダルを表示
    const modal = new bootstrap.Modal(document.getElementById('winnerModal'));
    modal.show();
  }
</script>

<div class="row">
  <!-- ゲーム状態表示 -->
  <div class="col-md-8">
    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title">
          ゲーム状態: 
          <span class="badge <%= case @game_session.status
                                 when 'waiting' then 'bg-warning'
                                 when 'playing' then 'bg-success'  
                                 when 'finished' then 'bg-secondary'
                                 end %>">
            <%= case @game_session.status
                when 'waiting' then '待機中'
                when 'playing' then 'プレイ中'
                when 'finished' then '終了'
                end %>
          </span>
        </h5>
        
        <% if @game_session.playing? %>
          <p class="mb-2">
            <strong>現在のターン:</strong> 
            <span class="text-primary"><%= @game_session.current_turn_player.name %>さん</span>
          </p>
        <% end %>
        
        <% if @game_session.finished? && @game_session.winner %>
          <div class="alert alert-success">
            <h4>🎉 勝者: <%= @game_session.winner.name %>さん</h4>
          </div>
        <% end %>
      </div>
    </div>

    <!-- 選手検索・選択 -->
    <% if @game_session.playing? && @game_session.current_turn_player == current_user %>
      <div class="card mb-3">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">あなたのターンです - 選手を選択してください</h5>
            <%= button_to "リタイア", retire_game_session_path(@game_session), 
                          method: :patch, class: "btn btn-outline-danger btn-sm",
                          confirm: "リタイアしますか？ゲームから脱落します。" %>
          </div>
          
          <%= form_with url: game_session_path(@game_session), method: :get, local: true do |form| %>
            <%= form.text_field :query, value: params[:query], placeholder: "選手名をひらがなで入力", 
                                class: "form-control mb-2", id: "fighter-search" %>
            <%= form.submit "検索", class: "btn btn-outline-primary btn-sm" %>
          <% end %>

          <% if @single_candidate %>
            <div class="alert alert-info mt-3">
              <strong>候補が1件に絞り込まれました:</strong>
              <%= form_with url: submit_fighter_game_session_path(@game_session), method: :post, local: true do |form| %>
                <%= form.hidden_field :fighter_id, value: @single_candidate.id %>
                <div class="d-flex align-items-center">
                  <span class="me-3"><%= @single_candidate.display_name %> (<%= @single_candidate.full_name_hiragana %>)</span>
                  <%= form.submit "この選手を選択", class: "btn btn-success btn-sm" %>
                </div>
              <% end %>
            </div>
          <% end %>

          <% if params[:query].present? && @search_results&.any? && !@single_candidate %>
            <div class="alert alert-warning mt-3">
              <strong>複数の選手が見つかりました！</strong><br>
              一人に絞れるまでひらがなを入力してください。
            </div>
          <% end %>
          
          <% if params[:query].present? && @search_results&.empty? %>
            <div class="alert alert-info mt-3">
              「<%= params[:query] %>」に一致する選手が見つかりませんでした。
            </div>
          <% end %>
        </div>
      </div>
    <% elsif @game_session.playing? %>
      <div class="alert alert-info">
        <%= @game_session.current_turn_player.name %>さんのターンです。お待ちください。
      </div>
    <% end %>

    <!-- 使用済み選手一覧 -->
    <% if @used_fighters.any? %>
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">使用済み選手 (<%= @used_fighters.count %>人)</h5>
          <div class="row">
            <% @used_fighters.each do |used_fighter| %>
              <div class="col-md-6 mb-2">
                <div class="used-fighter-item d-flex justify-content-between">
                  <span class="fw-bold"><%= used_fighter.fighter.display_name %></span>
                  <small class="text-muted"><%= used_fighter.used_by.name %></small>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <!-- サイドバー - プレイヤー情報・操作 -->
  <div class="col-md-4">
    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title">参加者 (<%= @players.count %>人)</h5>
        <% @players.each do |game_player| %>
          <div class="player-card d-flex justify-content-between align-items-center mb-2 p-3 rounded
                      <%= 'current-turn' if game_player.current_turn? %>">
            <div>
              <span class="<%= 'fw-bold text-primary' if game_player.current_turn? %>">
                <%= game_player.turn_order %>. <%= game_player.user.name %>
              </span>
              <% if game_player.is_eliminated %>
                <span class="badge bg-danger ms-1">脱落</span>
              <% elsif game_player.current_turn? %>
                <span class="badge bg-success ms-1">ターン中</span>
              <% end %>
            </div>
            
            <% if @game_session.creator == current_user && @game_session.playing? && !game_player.is_eliminated %>
              <%= form_with url: eliminate_player_game_session_path(@game_session), method: :patch, local: true, class: "d-inline" do |form| %>
                <%= form.hidden_field :user_id, value: game_player.user.id %>
                <%= form.submit "脱落", class: "btn btn-outline-danger btn-sm", 
                                confirm: "#{game_player.user.name}さんを脱落させますか？" %>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>

    <!-- ゲーム操作 -->
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">操作</h5>
        
        <% if @game_session.waiting? %>
          <% if @game_session.creator == current_user %>
            <% if @game_session.game_players.count >= 2 %>
              <%= button_to "ゲーム開始", start_game_game_session_path(@game_session), 
                          method: :patch, class: "btn btn-success w-100 mb-2",
                          confirm: "ゲームを開始しますか？" %>
            <% else %>
              <div class="alert alert-warning">
                最低2人のプレイヤーが必要です
              </div>
            <% end %>
            <%= link_to "設定変更", edit_game_session_path(@game_session), class: "btn btn-outline-primary w-100 mb-2" %>
          <% end %>
        <% end %>

        <%= button_to "退出", leave_game_session_path(@game_session), 
                    method: :delete, class: "btn btn-outline-danger w-100 mb-2",
                    confirm: @game_session.playing? ? "ゲームから脱落しますか？" : "ゲームから退出しますか？" %>
        
        <%= link_to "ゲーム一覧に戻る", game_sessions_path, class: "btn btn-secondary w-100" %>
      </div>
    </div>
  </div>
</div>
