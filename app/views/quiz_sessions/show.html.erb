<div class="container">
  <div class="row">
    <div class="col-md-8">
      <h1 class="mb-4">
        🔍 クイズ #<%= @quiz_session.id %>
        <% if @quiz_session.waiting? %>
          <span class="badge bg-warning text-dark">待機中</span>
        <% elsif @quiz_session.started? %>
          <span class="badge bg-success">プレイ中</span>
        <% else %>
          <span class="badge bg-secondary">終了</span>
        <% end %>
      </h1>

      <!-- ゲーム状態に応じた表示 -->
      <% if @quiz_session.waiting? %>
        <div class="alert alert-info">
          <h5 class="alert-heading">⏳ ゲーム開始を待っています</h5>
          <p>作成者: <%= @quiz_session.creator.name %></p>
          <% if @quiz_session.creator == current_user && @quiz_session.participants.count >= 2 %>
            <%= button_to "ゲームを開始", start_quiz_session_path(@quiz_session), method: :patch, class: "btn btn-success btn-lg" %>
          <% elsif @quiz_session.creator == current_user %>
            <p class="text-muted">他の参加者を待っています...（最低2人必要）</p>
          <% elsif @can_join %>
            <%= button_to "参加する", join_quiz_session_path(@quiz_session), method: :patch, class: "btn btn-primary btn-lg" %>
          <% elsif @participant %>
            <p>参加済み - ゲーム開始を待っています</p>
          <% end %>
        </div>

      <% elsif @quiz_session.started? %>
        <div class="card mb-4">
          <div class="card-header bg-primary text-white">
            <h5 class="mb-0">現在のヒント #<%= @quiz_session.current_hint_index + 1 %></h5>
          </div>
          <div class="card-body" id="current-hint">
            <% if @current_hint %>
              <div class="alert alert-light">
                <div class="d-flex justify-content-between align-items-center">
                  <div>
                    <span class="badge bg-secondary me-2"><%= @current_hint.category_name %></span>
                    <span class="badge bg-info">レベル <%= @current_hint.level %></span>
                  </div>
                </div>
                <h4 class="mt-3"><%= @current_hint.feature %></h4>
              </div>
            <% else %>
              <p class="text-muted">ヒントがありません</p>
            <% end %>
          </div>
        </div>

        <!-- 回答フォーム -->
        <% if @participant && !@participant.answered? && !@quiz_session.quiz_answers.where(user: current_user, hint_index: @quiz_session.current_hint_index).exists? %>
          <div class="card mb-4">
            <div class="card-header">
              <h5 class="mb-0">回答する</h5>
            </div>
            <div class="card-body">
              <form action="<%= submit_answer_quiz_session_path(@quiz_session) %>" method="post" id="answer-form" data-turbo="false" data-method="post">
                <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                <input type="hidden" name="_method" value="post">
                <div class="mb-3">
                  <label for="fighter_name" class="form-label">選手名（ひらがな）</label>
                  <input type="text" name="fighter_name" class="form-control" id="fighter-search" placeholder="ひらがなで入力">
                  <div id="fighter-suggestions" class="list-group mt-2"></div>
                </div>
                <input type="hidden" name="fighter_id" id="fighter-id">
                <div class="d-flex gap-2 align-items-center">
                  <input type="submit" value="回答" class="btn btn-primary" id="submit-answer" disabled>
                  <span class="text-muted">ミス: <%= @participant.miss_count %>回</span>
                </div>
              </form>
              
              <!-- パスボタンはフォーム外に配置 -->
              <div class="mt-3 text-center">
                <%= button_to "パス", pass_quiz_session_path(@quiz_session), method: :patch, class: "btn btn-secondary", data: { turbo: false } %>
              </div>
            </div>
          </div>
        <% elsif @participant && @participant.answered? %>
          <div class="alert alert-success">
            <h5 class="alert-heading">✅ 正解です！</h5>
            <p>他の参加者の回答を待っています...</p>
          </div>
        <% elsif @participant && @quiz_session.quiz_answers.where(user: current_user, hint_index: @quiz_session.current_hint_index).exists? %>
          <% current_answer = @quiz_session.quiz_answers.where(user: current_user, hint_index: @quiz_session.current_hint_index).last %>
          <div class="alert alert-<%= current_answer.passed? ? 'secondary' : 'warning' %>">
            <% if current_answer.passed? %>
              <h5 class="alert-heading">⏭️ パスしました</h5>
              <p>他の参加者の回答を待っています...</p>
            <% else %>
              <h5 class="alert-heading">❌ 不正解でした</h5>
              <p>他の参加者の回答を待っています...</p>
            <% end %>
          </div>
        <% end %>

      <% else %>
        <!-- 終了時の結果表示 - イケイケデザイン -->
        <div class="quiz-result-container mb-4">
          <!-- メインの結果カード -->
          <div class="result-main-card">
            <div class="result-header">
              <div class="header-content">
                <h2 class="result-title">
                  <span class="title-icon">🎯</span>
                  QUIZ COMPLETED!
                </h2>
                <div class="completion-badge">
                  <span class="badge-text">GAME OVER</span>
                </div>
              </div>
            </div>
            
            <div class="result-body">
              <!-- 正解選手の表示 -->
              <div class="fighter-reveal-section">
                <div class="fighter-info-container">
                  <div class="fighter-image-wrapper">
                    <% if @quiz_session.target_fighter.image_url.present? %>
                      <img src="<%= @quiz_session.target_fighter.image_url %>" 
                           alt="<%= @quiz_session.target_fighter.display_name %>" 
                           class="fighter-image">
                      <div class="image-overlay">
                        <div class="overlay-text">ANSWER</div>
                      </div>
                    <% else %>
                      <div class="fighter-placeholder">
                        <div class="placeholder-icon">👤</div>
                        <div class="placeholder-text">No Image</div>
                      </div>
                    <% end %>
                  </div>
                  
                  <div class="fighter-details">
                    <div class="answer-label">正解</div>
                    <h1 class="fighter-name"><%= @quiz_session.target_fighter.display_name %></h1>
                  </div>
                </div>
              </div>
              
              <!-- 勝者表示 -->
              <div class="winner-section">
                <% if @quiz_session.winner_user %>
                  <div class="winner-announcement">
                    <div class="winner-crown">👑</div>
                    <h2 class="winner-title">CHAMPION</h2>
                    <h3 class="winner-name"><%= @quiz_session.winner_user.name %></h3>
                    <div class="winner-effects">
                      <div class="sparkle">✨</div>
                      <div class="sparkle">🎊</div>
                      <div class="sparkle">⭐</div>
                    </div>
                  </div>
                <% else %>
                  <% max_points = @quiz_session.quiz_participants.maximum(:points) || 0 %>
                  <% top_count = @quiz_session.quiz_participants.where(points: max_points).count %>
                  <div class="no-winner-section">
                    <% if top_count > 1 %>
                      <div class="tie-announcement">
                        <div class="tie-icon">🤝</div>
                        <h3 class="tie-title">TIE GAME!</h3>
                        <p class="tie-message">複数のチャンピオン</p>
                      </div>
                    <% else %>
                      <div class="no-winner-announcement">
                        <div class="no-winner-icon">😤</div>
                        <h3 class="no-winner-title">NO CHAMPION</h3>
                        <p class="no-winner-message">もう一度挑戦しよう！</p>
                      </div>
                    <% end %>
                  </div>
                <% end %>
              </div>
            </div>
          </div>
        </div>

        <!-- カスタムCSS -->
        <style>
          .quiz-result-container {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            padding: 0;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3);
            overflow: hidden;
            position: relative;
          }
          
          .quiz-result-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" patternUnits="userSpaceOnUse" width="100" height="100"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="25" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            pointer-events: none;
          }

          .result-main-card {
            background: rgba(255,255,255,0.95);
            backdrop-filter: blur(10px);
            margin: 3px;
            border-radius: 17px;
            overflow: hidden;
          }

          .result-header {
            background: linear-gradient(45deg, #ff6b6b, #feca57);
            padding: 30px;
            text-align: center;
            position: relative;
          }

          .result-title {
            font-size: 2.5rem;
            font-weight: 900;
            color: white;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin: 0;
            letter-spacing: 2px;
          }

          .title-icon {
            display: inline-block;
            font-size: 3rem;
            margin-right: 15px;
            animation: bounce 2s infinite;
          }

          .completion-badge {
            margin-top: 15px;
          }

          .badge-text {
            background: rgba(0,0,0,0.3);
            color: white;
            padding: 8px 20px;
            border-radius: 50px;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
          }

          .result-body {
            padding: 40px;
          }

          .fighter-reveal-section {
            text-align: center;
            margin-bottom: 40px;
          }

          .fighter-info-container {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 30px;
            flex-wrap: wrap;
          }

          .fighter-image-wrapper {
            position: relative;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
            transition: transform 0.3s ease;
          }

          .fighter-image-wrapper:hover {
            transform: scale(1.05) rotate(1deg);
          }

          .fighter-image {
            width: 200px;
            height: 250px;
            object-fit: cover;
            display: block;
          }

          .fighter-placeholder {
            width: 200px;
            height: 250px;
            background: linear-gradient(135deg, #ff9a9e, #fecfef);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: white;
          }

          .placeholder-icon {
            font-size: 4rem;
            margin-bottom: 10px;
          }

          .placeholder-text {
            font-weight: bold;
            font-size: 1.2rem;
          }

          .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(255,107,107,0.8), rgba(254,202,87,0.8));
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
          }

          .fighter-image-wrapper:hover .image-overlay {
            opacity: 1;
          }

          .overlay-text {
            color: white;
            font-size: 1.5rem;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
          }

          .fighter-details {
            text-align: left;
            max-width: 300px;
          }

          .answer-label {
            background: linear-gradient(45deg, #ff6b6b, #feca57);
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: bold;
            display: inline-block;
            margin-bottom: 15px;
            text-transform: uppercase;
          }

          .fighter-name {
            font-size: 2.2rem;
            font-weight: 900;
            color: #333;
            margin: 0 0 15px 0;
            line-height: 1.2;
          }

          .fighter-meta {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
          }

          .meta-item {
            background: #f8f9fa;
            color: #666;
            padding: 8px 12px;
            border-radius: 15px;
            font-size: 0.9rem;
            border: 2px solid #e9ecef;
          }

          .winner-section {
            text-align: center;
            padding: 30px;
            background: linear-gradient(135deg, #ffecd2, #fcb69f);
            border-radius: 20px;
            position: relative;
            overflow: hidden;
          }

          .winner-announcement {
            position: relative;
            z-index: 2;
          }

          .winner-crown {
            font-size: 4rem;
            margin-bottom: 10px;
            animation: float 3s ease-in-out infinite;
          }

          .winner-title {
            font-size: 2rem;
            font-weight: 900;
            color: #333;
            margin: 10px 0;
            text-transform: uppercase;
            letter-spacing: 2px;
          }

          .winner-name {
            font-size: 2.5rem;
            font-weight: 800;
            color: #ff6b6b;
            margin: 15px 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
          }

          .winner-effects {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            pointer-events: none;
          }

          .sparkle {
            position: absolute;
            font-size: 2rem;
            animation: sparkle 2s infinite;
          }

          .sparkle:nth-child(1) {
            top: 20%;
            left: 20%;
            animation-delay: 0s;
          }

          .sparkle:nth-child(2) {
            top: 30%;
            right: 20%;
            animation-delay: 0.7s;
          }

          .sparkle:nth-child(3) {
            bottom: 20%;
            left: 30%;
            animation-delay: 1.4s;
          }

          .no-winner-section {
            padding: 20px;
            text-align: center;
          }

          .tie-announcement, .no-winner-announcement {
            background: rgba(255,255,255,0.9);
            padding: 30px;
            border-radius: 15px;
            border: 3px dashed #ccc;
          }

          .tie-icon, .no-winner-icon {
            font-size: 3rem;
            margin-bottom: 15px;
          }

          .tie-title, .no-winner-title {
            font-size: 1.8rem;
            font-weight: bold;
            color: #666;
            margin: 10px 0;
          }

          .tie-message, .no-winner-message {
            color: #888;
            font-size: 1.1rem;
          }

          @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
          }

          @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
          }

          @keyframes sparkle {
            0%, 100% { opacity: 0; transform: scale(0.5) rotate(0deg); }
            50% { opacity: 1; transform: scale(1.2) rotate(180deg); }
          }

          @media (max-width: 768px) {
            .fighter-info-container {
              flex-direction: column;
              text-align: center;
            }
            
            .fighter-details {
              text-align: center;
            }
            
            .result-title {
              font-size: 2rem;
            }
            
            .fighter-name {
              font-size: 1.8rem;
            }
            
            .winner-name {
              font-size: 2rem;
            }
          }
        </style>
      <% end %>
    </div>

    <!-- サイドバー：参加者リスト -->
    <div class="col-md-4">
      <div class="card">
        <div class="card-header">
          <h5 class="mb-0">👥 参加者 (<%= @participants.count %>人)</h5>
        </div>
        <div class="card-body">
          <ul class="list-group">
            <% @participants.each do |participant| %>
              <li class="list-group-item d-flex justify-content-between align-items-center" data-user-id="<%= participant.user_id %>">
                <div>
                  <%= participant.user.name %>
                  <% if participant.is_winner %>
                    <span class="badge bg-warning text-dark ms-2">🏆</span>
                  <% end %>
                </div>
                <div>
                  <% if participant.answered? %>
                    <span class="badge bg-success participant-status">正解</span>
                  <% elsif @quiz_session.started? %>
                    <% current_hint_answer = @current_hint_answers&.dig(participant.user_id) %>
                    <% if current_hint_answer %>
                      <% if current_hint_answer.passed? %>
                        <span class="badge bg-secondary participant-status">パス</span>
                      <% else %>
                        <span class="badge bg-warning participant-status">不正解</span>
                      <% end %>
                    <% else %>
                      <span class="badge bg-secondary participant-status">考え中...</span>
                    <% end %>
                  <% end %>
                  <% if @quiz_session.ended? %>
                    <span class="badge bg-primary"><%= participant.points %>pt</span>
                  <% end %>
                </div>
              </li>
            <% end %>
          </ul>
        </div>
      </div>

      <% if @quiz_session.ended? %>
        <div class="card mt-3">
          <div class="card-header">
            <h5 class="mb-0">📊 最終結果</h5>
          </div>
          <div class="card-body">
            <ol class="list-group list-group-numbered">
              <% @participants.by_points.each_with_index do |participant, index| %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                  <div>
                    <%= participant.user.name %>
                  </div>
                  <div>
                    <span class="badge bg-primary"><%= participant.points %>pt</span>
                    <span class="badge bg-danger">ミス: <%= participant.miss_count %>回</span>
                  </div>
                </li>
              <% end %>
            </ol>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
function initializeQuizAutocomplete() {
  console.log('DOMContentLoaded fired');
  
  const searchInput = document.getElementById('fighter-search');
  const suggestionsDiv = document.getElementById('fighter-suggestions');
  const fighterIdInput = document.getElementById('fighter-id');
  const submitButton = document.getElementById('submit-answer');
  
  console.log('Elements found:', {
    searchInput: !!searchInput,
    suggestionsDiv: !!suggestionsDiv,
    fighterIdInput: !!fighterIdInput,
    submitButton: !!submitButton
  });
  
  if (searchInput && suggestionsDiv && fighterIdInput && submitButton) {
    console.log('All elements found, setting up autocomplete');
    
    searchInput.addEventListener('input', function() {
      const query = this.value;
      
      if (query.length < 2) {
        suggestionsDiv.innerHTML = '';
        fighterIdInput.value = '';
        submitButton.disabled = true;
        return;
      }
      
      fetch(`/fighters.json?q=${encodeURIComponent(query)}`)
        .then(response => response.json())
        .then(fighters => {
          suggestionsDiv.innerHTML = '';
          
          fighters.slice(0, 5).forEach(fighter => {
            const item = document.createElement('a');
            item.href = '#';
            item.className = 'list-group-item list-group-item-action';
            item.textContent = fighter.display_name;
            item.dataset.fighterId = fighter.id;
            
            item.addEventListener('click', function(e) {
              e.preventDefault();
              searchInput.value = fighter.full_name_hiragana;
              fighterIdInput.value = fighter.id;
              submitButton.disabled = false;
              submitButton.removeAttribute('disabled');
              suggestionsDiv.innerHTML = '';
              console.log('Fighter selected:', fighter.display_name, 'ID:', fighter.id);
            });
            
            suggestionsDiv.appendChild(item);
          });
        });
    });
  }
  
  // フォーム送信を確実にする
  const form = document.getElementById('answer-form');
  const submitBtn = document.getElementById('submit-answer');
  
  if (form && submitBtn) {
    console.log('Form and submit button found');
    
    form.addEventListener('submit', function(e) {
      e.preventDefault(); // 通常の送信を防ぐ
      console.log('Form submit event triggered');
      const fighterIdValue = document.getElementById('fighter-id').value;
      console.log('Fighter ID:', fighterIdValue);
      
      if (!fighterIdValue) {
        alert('選手を選択してください。');
        return false;
      }
      
      console.log('Submitting via fetch...');
      
      // fetchでPOSTリクエストを送信
      const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      const formData = new FormData();
      formData.append('fighter_id', fighterIdValue);
      
      fetch('<%= submit_answer_quiz_session_path(@quiz_session) %>', {
        method: 'POST',
        body: formData,
        headers: {
          'X-CSRF-Token': token,
          'X-Requested-With': 'XMLHttpRequest',
          'Accept': 'application/json'
        }
      }).then(response => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error('Request failed');
        }
      }).then(data => {
        console.log('Success:', data);
        window.location.reload();
      }).catch(error => {
        console.error('Error:', error);
        alert('エラーが発生しました。');
      });
    });
  } else {
    console.log('Some elements not found');
  }
}

// ActionCableによるリアルタイム更新
function setupQuizSubscription() {
  const quizSessionId = <%= @quiz_session.id %>;
  
  console.log('Setting up ActionCable subscription for quiz session:', quizSessionId);
  
  App.cable.subscriptions.create({
    channel: "QuizSessionChannel",
    quiz_session_id: quizSessionId
  }, {
    connected() {
      console.log("Connected to QuizSessionChannel");
    },
    
    disconnected() {
      console.log("Disconnected from QuizSessionChannel");
    },
    
    received(data) {
      console.log("Received data:", data);
      
      switch(data.type) {
        case 'participant_answered':
          // 参加者が回答した時の処理
          updateParticipantStatus(data.user_id, data.status);
          break;
        case 'next_hint':
          // 次のヒントに進んだ時
          window.location.reload();
          break;
        case 'game_ended':
          // ゲーム終了時
          window.location.reload();
          break;
        case 'session_started':
          // セッション開始時
          window.location.reload();
          break;
      }
    }
  });
}

function updateParticipantStatus(userId, status) {
  // 参加者リストの状態を更新
  const participantElements = document.querySelectorAll('[data-user-id="' + userId + '"]');
  participantElements.forEach(element => {
    const statusBadge = element.querySelector('.participant-status');
    if (statusBadge) {
      statusBadge.className = 'badge participant-status';
      switch(status) {
        case 'correct':
          statusBadge.classList.add('bg-success');
          statusBadge.textContent = '正解';
          break;
        case 'incorrect':
          statusBadge.classList.add('bg-warning');
          statusBadge.textContent = '不正解';
          break;
        case 'passed':
          statusBadge.classList.add('bg-secondary');
          statusBadge.textContent = 'パス';
          break;
      }
    }
  });
}

// DOMContentLoadedまたは即座に実行
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', function() {
    initializeQuizAutocomplete();
    setupQuizSubscription();
  });
} else {
  // DOMは既に読み込まれている
  initializeQuizAutocomplete();
  setupQuizSubscription();
}
</script>